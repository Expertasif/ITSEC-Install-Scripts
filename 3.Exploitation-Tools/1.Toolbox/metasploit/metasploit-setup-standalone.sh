#!/bin/bash

############################# PREQUISITES START #############################
# 1. It is expected that the metasploit-framework https://github.com/rapid7/metasploit-framework - 
# - GIT repository is already cloned into MSFINSTALLDIR path as set in the VARIABLES
#
# 2. It is expected that the NMAP destination folder as set in the VARIABLES already exists.
#
# 3. The required RBENV Plugin will be cloned into USER HOME and installed from there IF you choose to install RUBY with this SCRIPT
#
# 4. JAVA will be downloaded to the /USER/HOME/DOWNLOADS folder, then packed to apt repos and installed.
#
# 5. The Script is intented to install MSF from github on 16.04.2 based OS
#
# ~. Why so complicated if ther eare apt repositories? ... BECAUSE ....
# ~. Author alphaaurigae
############################# PREQUISITES END #############################
#
#######################################################################
############################# SETUP START #############################
#######################################################################
#
############################# VARIABLES START #############################
MSFINSTALLDIR=/opt/ITSEC/3.Exploitation-Tools/1.Toolbox/metasploit-framework/rapid7/metasploit-framework
NMAPINSTALLDIR=/opt/ITSEC/1.Information-Gathering/1.Network_Portscanner/nmap/nmap
############################# VARIABLE END #############################
#
############################# STATIC FUNCTIONS START #############################
bold=$(tput bold)
normal=$(tput sgr0)
############################# STATIC FUNCTIONS END #############################
#
############################# MAIN SETUP START #############################
echo "${bold}
 __  __ ____  _____   ____    _    ____  _   _ 
|  \/  / ___||  ___| | __ )  / \  / ___|| | | |
| |\/| \___ \| |_    |  _ \ / _ \ \___ \| |_| |
| |  | |___) |  _|   | |_) / ___ \ ___) |  _  |
|_|  |_|____/|_|     |____/_/   \_\____/|_| |_|
                                               
${normal}"
echo ""
echo "SCRIPT IS BUILD ON 4.8.0-51-generic #54~ 16.04.2 LTS (Xenial Xerus)"
echo ""
echo "Set Installation Path is: ${bold}$INSTALLDIR ${normal} - change at line 23 in metasploit-setup.sh"
echo ""
echo "YOUR SYSTEM:"
sudo uname -r
sudo lsb_release -a
echo ""

############################# INSTALL JAVA8 START #############################
java -version
read -r -p "STEP 1 - BuildInstall all the JAVA8 JRE and JDK??? [Y/n] " response
response=${response,,}    # tolower
if [[ "$response" =~ ^(yes|y)$ ]]
then

#Oracle (http://www.oracle.com/technetwork/java/javase/downloads):
#    The Java Development Kit (JDK), version 6, 7 and 8
#    The Java Runtime Environment (JRE), version 6, 7 and 8
#    The Java API Javadoc, version 6, 7 and 8 
# EARLY RELEASE
#http://jdk.java.net/8/

sudo apt-get update && sudo apt-get upgrade
sudo apt-get install java-package

cd ~/Downloads
mkdir java8_install-setup
cd java8_install-setup
java -version

mkdir jre8
cd jre8
wget http://download.java.net/java/jdk8u152/archive/b03/binaries/jre-8u152-ea-bin-b03-linux-x64-19_apr_2017.tar.gz
wget http://download.java.net/java/jdk8u152/archive/b03/binaries/jre-8u152-ea-bin-b03-linux-x64-19_apr_2017.sha256
cat jre-8u152-ea-bin-b03-linux-x64-19_apr_2017.sha256
sha256sum jre-8u152-ea-bin-b03-linux-x64-19_apr_2017.tar.gz
make-jpkg jre-8u152-ea-bin-b03-linux-x64-19_apr_2017.tar.gz
sudo dpkg -i oracle-java8-jre_8u152~ea-build-b03_amd64.deb
cd ..

mkdir jdk8
cd jdk8
wget http://download.java.net/java/jdk8u152/archive/b03/binaries/jdk-8u152-ea-bin-b03-linux-x64-19_apr_2017.tar.gz
wget http://download.java.net/java/jdk8u152/archive/b03/binaries/jdk-8u152-ea-bin-b03-linux-x64-19_apr_2017.sha256
cat jdk-8u152-ea-bin-b03-linux-x64-19_apr_2017.sha256
sha256sum jdk-8u152-ea-bin-b03-linux-x64-19_apr_2017.tar.gz
make-jpkg jdk-8u152-ea-bin-b03-linux-x64-19_apr_2017.tar.gz
sudo dpkg -i oracle-java8-jdk_8u152~ea-build-b03_amd64.deb
cd ..

java -version
cd $INSTALLDIR/
echo "STEP 1 - BuildInstall all the JAVA JRE and JDK - COMPLETE"
else
echo "STEP 1 - BuildInstall all the JAVA JRE and JDK - ABORTED"
java -version
cd $INSTALLDIR/
fi
############################# INSTALL JAVA8 END #############################

############################# INSTALL MSF DEPS START #############################

read -r -p "STEP 2 - Install MSF Dependencies [Y/n] " response
response=${response,,}    # tolower
if [[ "$response" =~ ^(yes|y)$ ]]
then

sudo apt-get update
sudo apt-get upgrade
sudo apt-get install libreadline-dev libssl-dev libpq5 libpq-dev libreadline5 libsqlite3-dev libpcap-dev postgresql pgadmin3  zlib1g-dev libxml2-dev libxslt1-dev vncviewer libyaml-dev zlib1g-dev


echo "STEP 2 - Install MSF Dependencies - COMPLETE"
else
echo "STEP 2 - Install MSF Dependencies - ABORTED"
fi
############################# INSTALL MSF DEPS END #############################

read -r -p "STEP 3 - Install RBENV RUBY Version for MSF + RBENV PLUGIN [Y/n] " response
response=${response,,}    # tolower
if [[ "$response" =~ ^(yes|y)$ ]]
then



cd ~
sudo rm -r .rbenv
git clone git://github.com/sstephenson/rbenv.git .rbenv
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(rbenv init -)"' >> ~/.bashrc
#exec $SHELL

git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc

# sudo plugin so we can run Metasploit as root with "rbenv sudo msfconsole" 
git clone git://github.com/dcarley/rbenv-sudo.git ~/.rbenv/plugins/rbenv-sudo


RUBYVERSION=$(lynx --dump https://raw.githubusercontent.com/rapid7/metasploit-framework/master/.ruby-version )

#RUBYVERSION=$(wget https://raw.githubusercontent.com/rapid7/metasploit-framework/master/.ruby-version -q -O - )
rbenv install $RUBYVERSION
rbenv global $RUBYVERSION
ruby -v
echo "STEP 3 - Install RBENV RUBY Version for MSF + RBENV PLUGIN - Complete ..."

else
cd $INSTALLDIR/
echo "STEP 3 - Service Setup and Update - ABORTED ..."
fi



############################# INSTALL NMAP START #############################

read -r -p "STEP 4 - Build/Install NMAP [Y/n] " response
response=${response,,}    # tolower
if [[ "$response" =~ ^(yes|y)$ ]]
then

cd $NMAPINSTALLDIR
git clean -f 
git pull
./configure
make
sudo make install
make clean
echo "STEP 4 - Build/Install NMAP - COMPLETE ..."
nmap --help
else
echo "STEP 4 - Build/Install NMAP - ABORTED ..."
fi
############################# INSTALL NMAP END #############################


############################# INSTALL POSTGRESS START #############################
# CREDITS https://github.com/hazardousparticle/metasploit-installer/blob/master/metasploit_setup.sh
# Neatest setup for that matter i could find on  the webs

read -r -p "STEP 6 - Install  &  &  Setup Postgres for MSF [Y/n] " response
response=${response,,}    # tolower
if [[ "$response" =~ ^(yes|y)$ ]]
then

#exec $SHELL

#set up the database from base install
sudo systemctl enable postgresql
sudo systemctl start postgresql

#postgres version in form x.y for folder paths
PG_VER=`psql --version | awk '{print $3}' | cut -d. -f1,2`
echo "Found postgres version: $PG_VER"

#====== These values may be modified if desired ========

#metasploit paramaters
#db user
MSF_USER="msf"

#db
MSF_DB="msf_database"
DB_PORT=5432

#default postgres super user
POSTGRES_USER="postgres"

#random password so user will never need to know it
MSF_PASS=`cat /dev/urandom |base64 | head -c8`
POSTGRES_PASS=`cat /dev/urandom |base64 | head -c8`

#on debian
CONF_DIR="/etc/postgresql/$PG_VER/main/"
#on fedora
#CONF_DIR="/var/lib/pgsql/data/"


HBA_FILE="$CONF_DIR/pg_hba.conf"
PG_CONF="$CONF_DIR/postgresql.conf"

#====== Dont modify anything else =========

#create msf user, db and change password to the randomly generated one
#configure postgres to listen on localhost
#configure postgres to accept connections from the allowed users.
sudo -i -u $POSTGRES_USER << EOF
createuser $MSF_USER || true
psql -c "ALTER USER $MSF_USER WITH ENCRYPTED PASSWORD '$MSF_PASS';"
createdb --owner=$MSF_USER $MSF_DB || true

psql -c "ALTER USER $POSTGRES_USER WITH ENCRYPTED PASSWORD '$POSTGRES_PASS';"

echo "host    all    $POSTGRES_USER    127.0.0.1/32    md5" > "$HBA_FILE"
echo "host    $MSF_DB    $MSF_USER    127.0.0.1/32    md5" >> "$HBA_FILE"

echo "localhost:$DB_PORT:*:postgres:$POSTGRES_PASS" > ~/.pgpass
echo "localhost:$DB_PORT:$MSF_DB:$MSF_USER:$MSF_PASS" >> ~/.pgpass
chmod 0600 ~/.pgpass

echo "listen_addresses = 'localhost'" >> "$PG_CONF"

exit
EOF



sudo systemctl restart postgresql

echo "STEP 6 - Install  &  &  Setup Postgres for MSF - Complete"


else
cd $INSTALLDIR/
echo "STEP 6 - Install  &  &  Setup Postgres for MSF - ABORTED ..."
fi
############################# INSTALL POSTGRESS END #############################

############################# INSTALL MSF START #############################

read -r -p "STEP 7 - Install MSF [Y/n] " response
response=${response,,}    # tolower
if [[ "$response" =~ ^(yes|y)$ ]]
then


mkdir -p /opt/ITSEC/3.Exploitation-Tools/1.Toolbox/metasploit-framework/rapid7
cd /opt/ITSEC/3.Exploitation-Tools/1.Toolbox/metasploit-framework/rapid7
git clone https://github.com/rapid7/metasploit-framework
#

cd $MSFINSTALLDIR
sudo ldconfig
sudo updatedb
git clean -f
git fetch origin
git reset --hard origin/master
git pull
git submodule init && git submodule update --recursive
gem install bundler
bundle install

# Clean up old links and make new console launcher
sudo rm /usr/local/bin/msf*
#Symlink - needs absolute path
sudo bash -c 'for MSF in $(ls msf*); do ln -s /opt/ITSEC/3.Exploitation-Tools/1.Toolbox/metasploit-framework/rapid7/metasploit-framework/$MSF /usr/local/bin/$MSF;done'


#configure metaspolit to use the newly created database settings
cat > $MSFINSTALLDIR/config/database.yml << EOF
production:
    adapter: postgresql
    database: $MSF_DB
    username: $MSF_USER
    password: $MSF_PASS
    host: 127.0.0.1
    port: $DB_PORT
    pool: 75
    timeout: 5
EOF

# Make it work with the local sudo user
sudo sh -c "echo export MSF_DATABASE_CONFIG=$MSFINSTALLDIR/config/database.yml >> /etc/profile"
source /etc/profile
sudo ldconfig
sudo udpatedb
msfconsole --version
else
echo "STEP 7 - Install MSF - ABORTED ..."
fi

############################# INSTALL MSF END #############################
#
############################# MAIN SETUP END #############################
#
#######################################################################
############################# SETUP END #############################
#######################################################################