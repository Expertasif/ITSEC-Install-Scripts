#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/hatRiot/zarp
GITREPOROOT=/opt/ITSEC/3.Exploitation-Tools/zarp/hatRiot/zarp
GITCONFDIR=/opt/ITSEC/3.Exploitation-Tools/zarp/hatRiot/zarp/.git
GITCLONEDIR=/opt/ITSEC/3.Exploitation-Tools/zarp/hatRiot
EXECUTEABLE1=zarp.sh
EXECUTEABLE2=zarp
EXECUTEABLE3=zarp.py
BINDIR=/usr/local/bin
DSKTPFLS=/opt/ITSEC-Install-Scripts/0.Initial/usrlcl/.local/share/applications/3.Exploitation-Tools
DSKTPFLSDEST=/home/$USER/.local/share/applications/3.Exploitation-Tools
DSKTPFL=zarp.desktop
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/master
	git pull
}
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}


echo "${bold}
 _____   _    ____  ____  
|__  /  / \  |  _ \|  _ \ 
  / /  / _ \ | |_) | |_) |
 / /_ / ___ \|  _ <|  __/ 
/____/_/   \_\_| \_\_|    
            
${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout master &&
    git fetch origin master &&
    [ `git rev-list HEAD...origin/master --count` != 0 ] &&
    git merge origin/master
then
    
cd $GITREPOROOT

#sudo -H pip install -r requirements.txt 
GITRESET
GITSBMDLINIT

echo '#!/bin/bash
cd /opt/ITSEC/3.Exploitation-Tools/zarp/hatRiot/zarp 
python zarp.py "$@"' > $EXECUTEABLE1
chmod +x $GITREPOROOT/$EXECUTEABLE1
chmod +x $GITREPOROOT/$EXECUTEABLE3
sudo rm -f $BINDIR/$EXECUTEABLE2
sudo ln -s $GITREPOROOT/$EXECUTEABLE1 $BINDIR/$EXECUTEABLE2

rm -f $DSKTPFLSDEST/$DSKTPFL
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi