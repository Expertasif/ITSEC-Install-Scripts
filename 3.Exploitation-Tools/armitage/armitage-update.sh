#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

GITREPO=https://github.com/rsmudge/armitage.git
GITREPOROOT=/opt/ITSEC/3.Exploitation-Tools/armitage/rsmudge/armitage
GITCONFDIR=/opt/ITSEC/3.Exploitation-Tools/armitage/rsmudge/armitage/.git
GITCLONEDIR=/opt/ITSEC/3.Exploitation-Tools/armitage/rsmudge
EXECUTEABLE1=armitage.sh
EXECUTEABLE2=armitage
BINDIR=/usr/local/bin
DSKTPFLS=/opt/ITSEC-Install-Scripts/0.Initial/usrlcl/.local/share/applications/3.Exploitation-Tools
DSKTPFLSDEST=/home/$USER/.local/share/applications/3.Exploitation-Tools
DSKTPFL=armitage.desktop
GITRESET () {
	git clean -f
	git fetch origin
	git reset --hard origin/master
	git pull
}
GITSBMDLINIT () {
	git submodule init
	git submodule update --recursive
	sudo updatedb && sudo ldconfig
}

echo "${bold}
    _    ____  __  __ ___ _____  _    ____ _____ 
   / \  |  _ \|  \/  |_ _|_   _|/ \  / ___| ____|
  / _ \ | |_) | |\/| || |  | | / _ \| |  _|  _|  
 / ___ \|  _ <| |  | || |  | |/ ___ \ |_| | |___ 
/_/   \_\_| \_\_|  |_|___| |_/_/   \_\____|_____|
        
UPDATE
${normal}"

if [ ! -d $GITCONFDIR ]

then

mkdir -p $GITCLONEDIR
cd $GITCLONEDIR
git clone $GITREPO

else

echo "${bold}REPO EXISTS, skip clone...${normal}"

fi

cd $GITREPOROOT

if git checkout master &&
    git fetch origin master &&
    [ `git rev-list HEAD...origin/master --count` != 0 ] &&
    git merge origin/master
then
    
cd $GITREPOROOT
GITRESET
GITSBMDLINIT
./package.sh

echo "#!/bin/bash
cd /opt/ITSEC/3.Exploitation-Tools/armitage/rsmudge/armitage
java -jar armitage.jar $*" > $EXECUTEABLE1

chmod +x $GITREPOROOT/$EXECUTEABLE1
sudo rm -f $BINDIR/$EXECUTEABLE2
sudo ln -s $GITREPOROOT/$EXECUTEABLE1 $BINDIR/$EXECUTEABLE2
rm -f $DSKTPFLSDEST/$DSKTPFL
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL

echo "${bold}
UPDATED
${normal}"

else

echo "${bold}
UP TO DATE
${normal}"
	
fi
