#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

echo "${bold}
 ____   ___  _   _ _____ _____ ____  ____  ____  _     ___ ___ _____ 
|  _ \ / _ \| | | |_   _| ____|  _ \/ ___||  _ \| |   / _ \_ _|_   _|
| |_) | | | | | | | | | |  _| | |_) \___ \| |_) | |  | | | | |  | |  
|  _ <| |_| | |_| | | | | |___|  _ < ___) |  __/| |__| |_| | |  | |  
|_| \_\\___/ \___/  |_| |_____|_| \_\____/|_|   |_____\___/___| |_|  
             
${normal}"

GITREPOROOT=/opt/ITSEC/3.Exploitation-Tools/routersploit/reverse-shell/routersploit
GITREPOGITFILE=$GITREPOROOT/.git
DSKTPFLS=/opt/ITSEC-Install-Scripts/0.Initial/usrlcl/.local/share/applications/3.Exploitation-Tools
DSKTPFLSDEST=/home/$USER/.local/share/applications/3.Exploitation-Tools
DSKTPFL=routersploit.desktop

if [ ! -d $GITREPOGITFILE ]

then

mkdir -p /opt/ITSEC/3.Exploitation-Tools/routersploit/reverse-shell
cd /opt/ITSEC/3.Exploitation-Tools/routersploit/reverse-shell
git clone https://github.com/reverse-shell/routersploit

else

echo "repo exists"

fi

cd $GITREPOROOT

if git diff-index --quiet HEAD --; then
    echo "UP TO DATE"

else

cd $GITREPOROOT
git clean -f 
git fetch origin
git reset --hard origin/master
git pull
git submodule init
git submodule update --recursive

sudo -H pip2 install -r requirements.txt

sudo rm -f /usr/local/bin/routersploit

echo '#!/bin/bash
cd /opt/ITSEC/3.Exploitation-Tools/routersploit/reverse-shell/routersploit
python rsf.py "$@"' > routersploit.sh
chmod +x routersploit.sh
sudo ln -s /opt/ITSEC/3.Exploitation-Tools/routersploit/reverse-shell/routersploit/routersploit.sh /usr/local/bin/routersploit
rm -f $DSKTPFLSDEST/$DSKTPFL
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL

fi