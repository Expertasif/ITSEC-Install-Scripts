#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

echo "${bold}
 ____  ____   _____  ____   ______ _____ ____  ___ _  _______ 
|  _ \|  _ \ / _ \ \/ /\ \ / / ___|_   _|  _ \|_ _| |/ / ____|
| |_) | |_) | | | \  /  \ V /\___ \ | | | |_) || || ' /|  _|  
|  __/|  _ <| |_| /  \   | |  ___) || | |  _ < | || . \| |___ 
|_|   |_| \_\\___/_/\_\  |_| |____/ |_| |_| \_\___|_|\_\_____|
                                                   
${normal}"


mkdir -p /opt/ITSEC/2.Vulnerability-Scanner/proxystrike/sechacking
cd /opt/ITSEC/2.Vulnerability-Scanner/proxystrike/sechacking
git clone https://github.com/sechacking/proxystrike.git


GITREPOROOT=/opt/ITSEC/2.Vulnerability-Scanner/proxystrike/sechacking/proxystrike
GITREPOGITFILE=$GITREPOROOT/.git
EXECUTEABLE1=proxystrike.py
EXECUTEABLE2=proxystrike

DSKTPFLS=/opt/ITSEC-Install-Scripts/0.Initial/usrlcl/.local/share/applications/2.Vulnerability-Scanner
DSKTPFLSDEST=/home/$USER/.local/share/applications/2.Vulnerability-Scanner
DSKTPFL=proxystrike.desktop

sudo rm -f /usr/local/bin/$EXECUTEABLE2
sudo rm -f $GITREPOROOT/$EXECUTEABLE2

cd $GITREPOROOT
git clean -f
git fetch origin
git reset --hard origin/master
git pull
git submodule init
git submodule update --recursive

echo '#!/bin/bash
cd $GITREPOROOT 
python proxystrike.py "$@"' > $EXECUTEABLE2
chmod +x $GITREPOROOT/$EXECUTEABLE1
sudo ln -s $GITREPOROOT/$EXECUTEABLE2 /usr/local/bin/$EXECUTEABLE2
rm -r $DSKTPFLSDEST/$DSKTPFL
mkdir -p $DSKTPFLSDEST
cp $DSKTPFLS/$DSKTPFL $DSKTPFLSDEST/$DSKTPFL